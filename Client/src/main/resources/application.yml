environment:
  host: ${ENV_HOST}
  
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8080
  session:
    cookie:
      name: CLIENTSESSION
spring:  
  sleuth:
    sampler:
       percentage:  1
  zipkin:
    baseUrl:  http://localhost:9999/zipkin
  data:
    mongodb:
      host: localhost
      port: 27017
security:
  oauth2:
    client:
      clientId: SampleClientId
      clientSecret: secret
      access-token-uri: http://localhost:8585/secret/oauth/token
      user-authorization-uri: http://localhost:8585/secret/oauth/authorize
    resource:
      user-info-uri: http://localhost:8585/secret/user/me
      jwt:
        key-uri: http://localhost:8585/secret/oauth/token_key
logging:
  level:
    org.springframework.security: trace
---
spring:
  profiles: docker_env
  data:
    mongodb:
      host: ${ENV_HOST}
      port: 27017
  cloud:
    config:
      uri: http://${ENV_HOST}:9999/config
  sleuth:
    sampler:
       percentage:  1
  zipkin:
    baseUrl:  http://${ENV_HOST}:9999/zipkin
  thymeleaf:
    cache: false
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/
security:
  oauth2:
    client:
      clientId: SampleClientId
      clientSecret: secret
      access-token-uri: http://${ENV_HOST}:8585/secret/oauth/token
      user-authorization-uri: http://${ENV_HOST}:8585/secret/oauth/authorize
    resource:
      user-info-uri: http://${ENV_HOST}:8585/secret/user/me
      jwt:
        key-uri: http://${ENV_HOST}:8585/secret/oauth/token_key