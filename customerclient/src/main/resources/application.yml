environment:
  host: ${ENV_HOST}
  
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://192.168.99.101:8761/eureka/
server:
  port: 8082
  session:
    cookie:
      name: CLIENTSESSION
spring:  
  cloud:
    stream:
      bindings:
        output:
            destination:  eventtopic
            content-type: application/json
        input:
            destination:  eventtopic
            content-type: application/json
      kafka:
        binder:
          zkNodes: 192.168.99.101
          brokers: 192.168.99.101
  sleuth:
    sampler:
       percentage:  1
  zipkin:
    baseUrl:  http://192.168.99.101:9999/zipkin
  data:
    mongodb:
      host: 192.168.99.101
      port: 27017
security:
  basic:
    enabled: false
#  oauth2:
#    client:
#      clientId: SampleClientId
#      clientSecret: secret
#      access-token-uri: http://localhost:8585/secret/oauth/token
#      user-authorization-uri: http://localhost:8585/secret/oauth/authorize
#    resource:
#      user-info-uri: http://localhost:8585/secret/user/me
#      jwt:
#        key-uri: http://localhost:8585/secret/oauth/token_key
#logging:
#  level:
#    org.springframework.security: trace
management:
  security:
    enabled: false
---
spring:
  profiles: docker_env
  data:
    mongodb:
      host: ${ENV_HOST}
      port: 27017
  cloud:
    stream:
      bindings:
        output:
            destination:  eventtopic
            content-type: application/json
        input:
            destination:  eventtopic
            content-type: application/json
      kafka:
        binder:
          zkNodes: ${ENV_HOST}
          brokers: ${ENV_HOST}
    config:
      uri: http://${ENV_HOST}:9999/config
  sleuth:
    sampler:
       percentage:  1
  zipkin:
    baseUrl:  http://${ENV_HOST}:9999/zipkin
  thymeleaf:
    cache: false
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/
security:
  oauth2:
    client:
      clientId: SampleClientId
      clientSecret: secret
      access-token-uri: http://${ENV_HOST}:8585/secret/oauth/token
      user-authorization-uri: http://${ENV_HOST}:8585/secret/oauth/authorize
    resource:
      user-info-uri: http://${ENV_HOST}:8585/secret/user/me
      jwt:
        key-uri: http://${ENV_HOST}:8585/secret/oauth/token_key