version: '3.3'
services:
  eureka:
    build: ./eureka
    networks:
    - mynetwork
    ports:
    - 8761:8761
  admin:
    build: ./admin
    networks:
    - mynetwork
    ports:
    - 1111:1111
  oauth2:
    environment:
      SPRING_PROFILES_ACTIVE: docker_env
      ENV_HOST: 192.168.99.101
    build: ./oauth2
    networks:
    - mynetwork
    ports:
    - 8585:8585
  zipkin:
    environment:
      SPRING_PROFILES_ACTIVE: docker_env
      ENV_HOST: 192.168.99.101
    build: ./zipkin
    networks:
    - mynetwork
    ports:
    - 9411:9411
  config:
    environment:
      SPRING_PROFILES_ACTIVE: docker_env,native
      ENV_HOST: 192.168.99.101
    build: ./config
    networks:
    - mynetwork
    ports:
    - 8888:8888
  zuul:
    environment:
      SPRING_PROFILES_ACTIVE: docker_env
      ENV_HOST: 192.168.99.101
    build: ./zuul
    networks:
    - mynetwork
    ports:
    - 9999:9999
  turbine:
    environment:
      SPRING_PROFILES_ACTIVE: docker_env
      ENV_HOST: 192.168.99.101
    build: ./turbine
    networks:
    - mynetwork
    ports:
    - 6565:6565
  client:
    environment:
      SPRING_PROFILES_ACTIVE: docker_env
      ENV_HOST: 192.168.99.101
    build: ./client
    networks:
    - mynetwork
    depends_on:
    - admin
    - config
    - eureka
    - oauth2
    - zipkin
    - turbine
    - zuul
    - mongodb
    - kafka
  eventclient:
    environment:
      SPRING_PROFILES_ACTIVE: docker_env
      ENV_HOST: 192.168.99.101
    build: ./eventclient
    networks:
    - mynetwork
    depends_on:
    - kafka
    ports:
    - 8080:8080
  mongodb:
    image: mongo:3.4
    container_name: mongodb
    networks:
    - mynetwork
    environment:
    - MONGO_DATA_DIR=/data/mongodb
    - MONGO_LOG_DIR=/dev/null
    volumes:
    - ./data/mongodb:/data/mongodb
    ports:
    - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - 2181:2181
    networks:
    - mynetwork
  kafka:
    image: wurstmeister/kafka
    ports:
    - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.101
      ADVERTISED_LISTENERS: PLAINTEXT://192.168.99.101:9092
      KAFKA_CREATE_TOPICS: eventtopic:1:1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - zookeeper
    networks:
    - mynetwork
networks:
  mynetwork:
    driver: bridge